// Generated by ts-to-zod.
// Type of 'costCategorySchema' set manually because it couldn't be generated automatically
import { z } from "zod";
import { CostCategory } from "./cost.js";

export const calculationPointsSchema = z.object({
  start: z.number(),
  available: z.number(),
  total: z.number(),
});

export const professionHobbySchema = z.object({
  name: z.string(),
  skill: z.string(),
});

export const attributeSchema = z.object({
  start: z.number(),
  current: z.number(),
  mod: z.number(),
  totalCost: z.number(),
});

export const baseValueSchema = z.object({
  start: z.number(),
  current: z.number(),
  byLvlUp: z.number(),
  mod: z.number(),
  totalCost: z.number(),
});

export const combatSkillSchema = z.object({
  handling: z.number(),
  attackDistributed: z.number(), // TODO rename to attackValue
  paradeDistributed: z.number(), // TODO rename to paradeValue
});

const costCategorySchema = z.nativeEnum(CostCategory);

export const skillSchema = z.object({
  activated: z.boolean(),
  start: z.number(),
  current: z.number(),
  mod: z.number(),
  totalCost: z.number(),
  defaultCostCategory: costCategorySchema,
});

export const characterSheetSchema = z.object({
  generalInformation: z.object({
    name: z.string(),
    level: z.number(),
    sex: z.string(),
    profession: professionHobbySchema,
    hobby: professionHobbySchema,
    birthday: z.string(),
    birthplace: z.string(),
    size: z.string(),
    weight: z.string(),
    hairColor: z.string(),
    eyeColor: z.string(),
    residence: z.string(),
    appearance: z.string(),
    specialCharacteristics: z.string(),
  }),
  calculationPoints: z.object({
    adventurePoints: calculationPointsSchema,
    attributePoints: calculationPointsSchema,
  }),
  advantages: z.array(z.string()),
  disadvantages: z.array(z.string()),
  specialAbilities: z.array(z.string()),
  baseValues: z.object({
    healthPoints: baseValueSchema,
    mentalHealth: baseValueSchema,
    armorLevel: baseValueSchema,
    naturalArmor: baseValueSchema,
    initiativeBaseValue: baseValueSchema,
    attackBaseValue: baseValueSchema,
    paradeBaseValue: baseValueSchema,
    rangedAttackBaseValue: baseValueSchema,
    luckPoints: baseValueSchema,
    bonusActionsPerCombatRound: baseValueSchema,
    legendaryActions: baseValueSchema,
  }),
  attributes: z.object({
    courage: attributeSchema,
    intelligence: attributeSchema,
    concentration: attributeSchema,
    charisma: attributeSchema,
    mentalResilience: attributeSchema,
    dexterity: attributeSchema,
    endurance: attributeSchema,
    strength: attributeSchema,
  }),
  skills: z.object({
    combat: z.object({
      martialArts: skillSchema,
      barehanded: skillSchema,
      chainWeapons: skillSchema,
      daggers: skillSchema,
      slashingWeapons1h: skillSchema,
      thrustingWeapons1h: skillSchema,
      slashingWeapons2h: skillSchema,
      thrustingWeapons2h: skillSchema,
      polearms: skillSchema,
      greatsword: skillSchema,
      missile: skillSchema,
      firearmSimple: skillSchema,
      firearmMedium: skillSchema,
      firearmComplex: skillSchema,
    }),
    body: z.object({
      athletics: skillSchema,
      juggleries: skillSchema,
      climbing: skillSchema,
      bodyControl: skillSchema,
      riding: skillSchema,
      sneaking: skillSchema,
      swimming: skillSchema,
      selfControl: skillSchema,
      hiding: skillSchema,
      singing: skillSchema,
      sharpnessOfSenses: skillSchema,
      imitatingVoices: skillSchema,
      dancing: skillSchema,
      quaffing: skillSchema,
      pickpocketing: skillSchema,
    }),
    social: z.object({
      seduction: skillSchema,
      etiquette: skillSchema,
      teaching: skillSchema,
      acting: skillSchema,
      writtenExpression: skillSchema,
      disguising: skillSchema,
      streetKnowledge: skillSchema,
      knowledgeOfHumanNature: skillSchema,
      persuading: skillSchema,
      convincing: skillSchema,
    }),
    nature: z.object({
      tracking: skillSchema,
      knottingSkills: skillSchema,
      trapping: skillSchema,
      fishing: skillSchema,
      orientation: skillSchema,
      wildernessLife: skillSchema,
    }),
    knowledge: z.object({
      anatomy: skillSchema,
      architecture: skillSchema,
      geography: skillSchema,
      history: skillSchema,
      petrology: skillSchema,
      botany: skillSchema,
      philosophy: skillSchema,
      astronomy: skillSchema,
      mathematics: skillSchema,
      knowledgeOfTheLaw: skillSchema,
      estimating: skillSchema,
      zoology: skillSchema,
      technology: skillSchema,
      chemistry: skillSchema,
      warfare: skillSchema,
      itSkills: skillSchema,
      mechanics: skillSchema,
    }),
    handcraft: z.object({
      training: skillSchema,
      woodwork: skillSchema,
      foodProcessing: skillSchema,
      leatherProcessing: skillSchema,
      metalwork: skillSchema,
      stonework: skillSchema,
      fabricProcessing: skillSchema,
      alcoholProduction: skillSchema,
      steeringVehicles: skillSchema,
      cheating: skillSchema,
      bargaining: skillSchema,
      firstAid: skillSchema,
      calmingSbDown: skillSchema,
      drawingAndPainting: skillSchema,
      makingMusic: skillSchema,
      lockpicking: skillSchema,
    }),
  }),
  combatValues: z.object({
    melee: z.object({
      martialArts: combatSkillSchema,
      barehanded: combatSkillSchema,
      chainWeapons: combatSkillSchema,
      daggers: combatSkillSchema,
      slashingWeapons1h: combatSkillSchema,
      thrustingWeapons1h: combatSkillSchema,
      slashingWeapons2h: combatSkillSchema,
      thrustingWeapons2h: combatSkillSchema,
      polearms: combatSkillSchema,
      greatsword: combatSkillSchema,
    }),
    ranged: z.object({
      missile: combatSkillSchema,
      firearmSimple: combatSkillSchema,
      firearmMedium: combatSkillSchema,
      firearmComplex: combatSkillSchema,
    }),
  }),
});

export const characterSchema = z.object({
  userId: z.string(),
  characterId: z.string(),
  characterSheet: characterSheetSchema,
});

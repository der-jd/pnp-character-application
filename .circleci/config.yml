version: 2.1

orbs:
  aws-cli: circleci/aws-cli@5


parameters:
  delete-services:
    description: If true, deletes the Terraform resources in AWS.
    type: boolean
    default: false


workflows:
  build-deploy:
    when:
      not: << pipeline.parameters.delete-services >>
    jobs:
      - check-format-terraform-code
      - lint-terraform-code
      - package-lambda-code
      - deploy:
          requires:
            - check-format-terraform-code
            - lint-terraform-code
            - package-lambda-code

  delete-services:
    when: << pipeline.parameters.delete-services >>
    jobs:
      - terraform-destroy


jobs:
  check-format-terraform-code:
    docker:
      - image: hashicorp/terraform:1.9
    steps:
      - checkout
      - run:
          name: Install make
          command: apk add make
      - run:
          name: Check format of Terraform code
          command: make check-format-terraform

  lint-terraform-code:
    docker:
      - image: cimg/base:2024.10
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
            make lint-init-terraform
      - run:
          name: Lint Terraform code
          command: make lint-terraform

  package-lambda-code:
    docker:
      - image: cimg/node:22.10
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            cd backend
            npm install
      - run:
          name: Compile code
          command: |
            cd backend
            npx tsc
      - run:
          name: Zip code
          command: |
            cd backend/dist
            zip -r skill_calculation.zip *

  # https://developer.hashicorp.com/terraform/tutorials/automation/circle-ci
  deploy:
    docker:
      - image: hashicorp/terraform:1.9
    steps:
      - checkout
      - aws-cli/setup:
          role_arn: "$AWS_ROLE_ARN"
      - run:
          name: Terraform init
          command: |
            cd terraform
            terraform init -input=false
      - run:
          name: Terraform plan
          command: |
            cd terraform
            terraform plan -out tfapply
      - run:
          name: Terraform apply
          command: |
            cd terraform
            terraform apply -auto-approve tfapply

  terraform-destroy:
    docker:
      - image: hashicorp/terraform:1.9
    steps:
      - checkout
      - aws-cli/setup:
          role_arn: "$AWS_ROLE_ARN"
      - run:
          name: Terraform init
          command: |
            cd terraform
            terraform init -input=false
      - run:
          name: Terraform plan destroy
          command: |
            cd terraform
            terraform plan -destroy -out tfdestroy
      - run:
          name: Terraform destroy
          command: |
            cd terraform
            terraform apply -auto-approve tfdestroy
